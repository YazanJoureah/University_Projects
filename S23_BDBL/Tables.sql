--create products table
Create Table Product (
    Productid Int  Generated By Default As Identity,
    P_Name Varchar(50) NOT NULL,
    Specifications VARCHAR(100) NOT NULL,
    ProductionDate DATE Not Null,
    ExpiryDate DATE Not Null,
    WholesalePrice DECIMAL(10,2) Not Null,
    Retailprice Decimal(10,2) Not Null,
    Deffective_Price Decimal(10,2),
    PRIMARY KEY (Productid)
);



--create departments table (sales,purchasement)
Create Table Departments (
    Departmentid Int Generated By Default As Identity ,
    D_Name Varchar(50) Not Null,
    Primary Key(Departmentid)
);

-- Create the PurchaseOrder table
Create Table Purchaseorder (
    Departmentid Int Not Null,
    Purchaseorderid Int Generated By Default As Identity,
    Purchasedate Date Not Null,
    Primary Key(Purchaseorderid),
    FOREIGN KEY (DepartmentID) REFERENCES Departments(DepartmentID)
    );
    
 -- Create the SalesOrder table
Create Table Salesorder (
    Departmentid Int Not Null,
    Salesorderid Int Generated By Default As Identity,
    Salesdate Date Not Null,
    Primary Key(Salesorderid),
    FOREIGN KEY (DepartmentID) REFERENCES Departments(DepartmentID)
);

--Create warehouses table(Rawmaterial,validProducts,invalidProducts)
Create Table Warehouse (
    Warehouseid Int Generated By Default As Identity,
    W_Location Varchar(50) Not Null,
    Capacity Int Not Null,
    Primary Key(Warehouseid)
);

--create raw material table
Create Table Rawmaterial (
    Rawmaterialid Int Generated By Default As Identity,
    M_Name Varchar(50) Not Null,
    Supplier Varchar(50) Not Null,
    Warehouseid Int Not Null,
    Minlimit Int Not Null,
    Maxlimit Int Not Null,
    Primary Key(Rawmaterialid),
    FOREIGN KEY (WarehouseID) REFERENCES Warehouse(WarehouseID)
);
--create the table of machines
Create Table Machine (
    Machineid Int Generated By Default As Identity,
    M_Name Varchar(50) Not Null,
    Capacity Int Not Null,
    Primary Key(Machineid)
);



     --Create procedures tables 
     
    --Create Purchased_Raw table (PurchasedOrder-rawmaterial M-M relation table)
 Create Table Purchased_Rawmaterial(
  Rawmaterialid Int Not Null,
  Purchaseorderid Int Not Null,
  Quantity INT Not Null,
  PRIMARY KEY (RawMaterialID,PurchaseOrderID),
  FOREIGN KEY (RawMaterialID) REFERENCES RawMaterial(RawMaterialID),
  FOREIGN KEY (PurchaseOrderID) REFERENCES PurchaseOrder(PurchaseOrderID)
);    

--create sold_produt table (salesorder-products M-M relation table)   
    Create Table Sold_Products(
  Productid Int Not Null,
  Salesorderid Int Not Null,
  Quantity Int Not Null,
  PRIMARY KEY (ProductID,SalesOrderID),
  FOREIGN KEY (ProductID) REFERENCES Product(ProductID),
  FOREIGN KEY (SalesOrderID) REFERENCES SalesOrder(SalesOrderID)
);    

--Raw-product M-M relation table
Create Table Product_Rawmaterial(
  Rawmaterialid Int Not Null,
  Productid Int Not Null,
  Quantity Int Not Null,
  PRIMARY KEY (RawMaterialID,ProductID),
    FOREIGN KEY (RawMaterialID) REFERENCES RawMaterial(RawMaterialID),
    FOREIGN KEY (ProductID) REFERENCES Product(ProductID)
);

--create productmachine table (M-M relation)
Create Table Productmachine (
    Productid Int Not Null,
    Machineid Int Not Null,
    PRIMARY KEY (ProductID, MachineID),
    FOREIGN KEY (ProductID) REFERENCES Product(ProductID),
    FOREIGN KEY (MachineID) REFERENCES Machine(MachineID)
);

-- Create the QualityControl table
Create Table Qualitycontrol (
    Qualitycontrolid Int Generated By Default As Identity ,
    Qualitycontroldate Date Not Null,
    Status Varchar(10) Check (Status In ('VALID', 'INVALID')) Not Null,
    Productid Int Not Null,
    Warehouseid Int Not Null,
    Quantity INT Not Null,
    PRIMARY KEY (ProductID, QualityControlID),
    FOREIGN KEY (ProductID) REFERENCES Product (ProductID),
    FOREIGN KEY (WarehouseID) REFERENCES Warehouse (WarehouseID)
    );
    
